### Resumo da Aula 14 - CSS Separado do HTML

Nesta aula, aprendemos sobre **seletores avanÃ§ados do CSS**, focando nos seletores de irmÃ£os (*sibling selectors*), seletores de atributos e como podemos estilizar elementos especÃ­ficos sem precisar adicionar classes extras.

---

### ğŸ”¹ **1. Resetando o CSS**
No inÃ­cio, usamos:
```css
* {
    margin: 0;
    padding: 0;
}
```
Isso remove os espaÃ§amentos padrÃ£o do navegador em todos os elementos da pÃ¡gina, garantindo mais controle sobre o layout.

---

### ğŸ”¹ **2. Seletores de IrmÃ£os (Sibling Selectors)**

Os seletores de irmÃ£os permitem estilizar elementos que compartilham um mesmo "pai" (*parent*). Vimos dois tipos principais:

#### **2.1. Adjacent Sibling Selector (`+`)**
Seleciona **apenas** o elemento imediatamente seguinte.

```css
.pai h1 + p {
    color: red;
}
```
ğŸ“Œ **ExplicaÃ§Ã£o**: Aqui, apenas o primeiro `<p>` logo apÃ³s um `<h1>` dentro do `.pai` serÃ¡ vermelho. Se houver vÃ¡rios `<p>`, apenas o primeiro que vem logo apÃ³s um `<h1>` serÃ¡ afetado.

---

#### **2.2. General Sibling Selector (`~`)**
Seleciona **todos** os elementos irmÃ£os que vÃªm depois.

```css
.pai h1 ~ p {
    color: blue;
}
```
ğŸ“Œ **ExplicaÃ§Ã£o**: Aqui, **todos os `<p>` apÃ³s um `<h1>` dentro da `.pai` ficarÃ£o azuis**, independente se estÃ£o imediatamente apÃ³s o `<h1>` ou nÃ£o.

---

### ğŸ”¹ **3. Selecionando elementos com classes especÃ­ficas**

Outro exemplo foi a aplicaÃ§Ã£o do seletor de irmÃ£os em classes especÃ­ficas:

```css
.pai .um + .dois {
    color: rgb(157, 9, 71);
}
```
ğŸ“Œ **ExplicaÃ§Ã£o**: O primeiro `.dois` que vem imediatamente depois de um `.um` dentro de `.pai` terÃ¡ a cor alterada.

Se quisÃ©ssemos afetar **todos** os `.dois` que vÃªm depois de um `.um`, usarÃ­amos `~` ao invÃ©s de `+`:
```css
.pai .um ~ .dois {
    color: rgb(157, 9, 71);
}
```

---

### ğŸ”¹ **4. Seletores de Atributo**
AlÃ©m das classes e IDs, tambÃ©m podemos selecionar elementos com atributos especÃ­ficos.

#### **4.1. Selecionando elementos com um atributo especÃ­fico**
```css
[meu-atributo="valor"] {
    color: red;
}
```
ğŸ“Œ **ExplicaÃ§Ã£o**: Qualquer elemento que tenha o atributo `meu-atributo="valor"` receberÃ¡ a cor vermelha. No nosso HTML, isso se aplica a:
```html
<h1 class="heading" meu-atributo="valor">lorem</h1>
```

---

### ğŸ”¹ **5. Estilizando Inputs com Atributos**
Podemos estilizar elementos de formulÃ¡rio com base nos seus atributos.

```css
[checked] {
    width: 50px;
    height: 50px;
}
```
ğŸ“Œ **ExplicaÃ§Ã£o**: Isso aumenta o tamanho de qualquer `<input>` que tenha o atributo `checked`, como no nosso HTML:

```html
<input type="checkbox" checked>
```
Somente os checkboxes marcados (`checked`) serÃ£o afetados.

---

## ğŸš€ **Resumo Final**
Nesta aula, vocÃª aprendeu:
âœ… Resetar estilos padrÃ£o do navegador.  
âœ… Usar **seletores de irmÃ£os** (`+` para o prÃ³ximo e `~` para todos os seguintes).  
âœ… Selecionar elementos com **atributos personalizados**.  
âœ… Estilizar inputs com base em seus atributos (`[checked]`).  

Esses conceitos ajudam a criar estilos mais organizados e flexÃ­veis, sem precisar adicionar muitas classes extras no HTML.

Se precisar de mais detalhes ou exemplos, sÃ³ avisar! ğŸ˜ƒ